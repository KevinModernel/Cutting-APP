doctype html
html(lang='en')
    head
      meta(charset="utf-8")
      title Cutting Weigth
      meta(content="width=device-width, initial-scale=1.0", name="viewport")
      meta(content="Free HTML Templates", name="keywords")
      meta(content="Free HTML Templates", name="description")
      link(href="../public/css/style.css", rel="stylesheet")
      link(rel="preconnect", href="https://fonts.gstatic.com")
      link(href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap", rel="stylesheet")
      link(href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css", rel="stylesheet")
      link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css")
      link(href="https://fonts.googleapis.com/css?family=Raleway:200,300,400,500,600,700,800&display=swap", rel="stylesheet")
    
    body
      h1.text-primary.mb-4 Panel de #{journey.journeyName}
      h2.text-primary.mb-4 id journey: #{journey.id}

      h2 Ingresar Fecha / Peso:
      form(action='/newmeasure', method='POST')
        label Fecha:
        br
        input(type="date", placeholder="Ingrese el nombre", required=true, name='date', value='')
        br
        label Peso:
        br
        input(type="text", placeholder="ingresar peso", required=true, name='weight', value='')
        label Foreign key:
        br
        input(type="number", placeholder="foreign key", required=true, name='journeyId', value=`${journey.id}`)        
        input(type="submit", value="Submit")

      if dailyProgress
        h2 Tabla seguimiento diario:
        table(id='myTable')
          colgroup.columns(span="5")
          tr
            th Fecha
            th Peso
            th Delta Diario
            th Peso Objetivo
            th Editar
          each day in dailyProgress
            tr
              td.X #{day.date}
              td.Y #{day.weight}
              td #{day.dailyVariation}
              td.YSecond #{day.goalWeight}
              td
                form(action=`/deleteday/${day.id}`, method='POST')
                  button(type='submit') Eliminar
      if goal
        h2 Final Goals:
        h3 id: #{goal.id}
        h3 bw: #{goal.bw}
        h3 bf: #{goal.bf}
        h3 endDate: #{goal.endDate}
        h3 FK: #{goal.journeyId}
        br
      else 
        h3.text-primary.mb-4 Cargar Goals para este Journey:     
        form(action='/newgoal', method='POST')
          label bw:
          br
          input(type="text", placeholder="Ingrese el bw", required=true, name='bw', value='')
          br
          label bf:
          br
          input(type="number", placeholder="Ingrese su bf", required=true, name='bf', value='')
          br
          label end date
          br
          input(type="date", placeholder="Ingrese su BF %", required=true, name='endDate', value='')
          br
          label Foreign key:
          br
          input(type="number", placeholder="foreign key", required=true, name='journeyId', value=`${journey.id}`)
          input(type="submit", value="Submit")       

      h2 Grafico:
      #tester(style="width:600px;height:250px;")

    footer
      script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js")   
      script(src="https://cdn.plot.ly/plotly-2.17.1.min.js")
      script.
        (function (dailyProgress) {
          TESTER = document.getElementById('tester');
          let x = [];
          let newX;

          let y = [];
          let newY;

          let ySecond = [];
          let newYSecond;

          // get the table
          let table = document.getElementById( 'myTable' );

          // get table rows
          let rows = table.getElementsByTagName( 'tr' );

          for (let i=1; i < rows.length; i++) {
            newX = rows[i].cells[0].innerText;
            x.push(newX);
            newY = rows[i].cells[1].innerText
            y.push(newY);
            newYSecond = rows[i].cells[3].innerText;
            ySecond.push(newYSecond);
          }

          let firstPlotTrace = {
            x,
            y,
            name: 'yaxis data'
          }

          let secondPlotTrace = {
            x,
            y: ySecond,
          }

          let layout = {
            title: 'Double Plot Title',
            height: 400,
            width: 400,
            yaxis: {title: 'Simple Contour Plot Axis'},
            yaxis2: {title: 'Line and Scatter Plot Axis'}
          };


          let plotData = [firstPlotTrace, secondPlotTrace];

          Plotly.newPlot(TESTER, plotData, layout);
        })();